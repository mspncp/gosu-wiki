#summary Log of Gosu's development.

=0.7.27=
  * 2011-01-29: Linux: Switched from SDL_mixer to Audiere (supports 'speed' arguments now)
  * 2011-01-22: Windows: Switched from FMOD3 to Audiere
  * 2011-01-19: All: Added Gosu::fps() that returns the approximate current framerate

=0.7.26=
  * 2011-01-08: Ruby: Added Color#== and Color::argb/Color::rgba constructors
  * 2011-01-08: All: Added Window#gl(z, &block) (Ruby) / Graphics::scheduleGL(functor, z) (C++)
  * 2011-01-08: All. Optimized Gosu's rendering backend a bit
  * 2011-01-02: Ruby: All Strings coming from Gosu are now correctly tagged as UTF-8 in Ruby 1.9
  * 2010-11-20: Fixed SDL_TTF font height on Linux

=0.7.25=
  * 2010-11-01: All: Fixed Gosu::Image#to_blob/ImageData::toBitmap
  * 2010-10-27: Ruby: Now seeding Gosu::random with the system time on startup
  * 2010-09-29: Ruby: Added missing scale(x, y, around_x, around_y) (thanks to Spooner)
  * 2010-09-29: Ruby: Added Image#save(fn)
  * 2010-09-08: All: Un-deprecated button_id_to_char/char_to_button_id
  * 2010-09-08: Mac: Fixed button_id_to_char/char_to_button_id

=0.7.24=
  * 2010-09-08: All: Made all beginClipping/clip_to arguments doubles instead of ints
  * 2010-09-08: C++: Made Image, Sample, Font copy-constructable because they are immutable - should greatly reduce the need of shared_ptrs.
  * 2010-09-03: OS X: Improved text rendering
  * 2010-09-03: Ruby: line_height (argument to Image#from_text) is now a signed int, not unsigned int
  * 2010-08-30: Windows: Fixed speed issues (re-introduced optimization switch)

=0.7.23=
  * 2010-08-23: Windows: Removed inappropriate exception when mouseX/Y cannot be refreshed due to locked screen
  * 2010-08-23: C++: Finally removed RotFlip completely. If you actually happened to use it: a replacement is available on the forum.
  * 2010-08-22: Mac: Fixed setMousePos/mouse_x=/mouse_y= on OS X when the window has been shrunk down.
  * 2010-08-19: C++: Added releaseMemory() callback to Gosu::Window that is mainly called on iOS when the OS is low on memory. Proposals for creative uses on other operating systems welcome.
  * 2010-08-16: All: Fixed a channel swapping bug in Image::toBitmap/to_blob.
  * 2010-08-13: All: Fixed a crash when formatting a paragraph of text with a word that is wider than the max paragraph width.
  * 2010-08-12: All: Fixed an exception when partial formatting strings were rendered.
  * 2010-08-05: C++: Added Window::loseFocus callback that is mainly called on iOS when the screen is locked.
  * 2010-08-01: Mac: Fixed a crash where a USB device would not have a device name (product name)
  * 2010-08-01: All: Added Window#flush/Graphics::flush() to flush the current Z queue to OpenGL and start a fresh one. All drawing operations afterwards will inevitably be *over* the previous ones.
  * 2010-07-27: Added aroundX, aroundY parameters to Gosu::scale(sx, sy)
  * 2010-07-07: Added accelerometerX/Y/Z() methods to Input (returning 0 on non-iPhone platforms), with thanks to PhilCK
  * 2010-07-04: All: Made clipping operations nestable (also: faster, respects transforms etc.)
  * 2010-07-04: C++: Deprecated zImmediate
  * 2010-06-29: Fixed MAX_TEXTURE_SIZE, now always 512 (pessimistic value) on Linux
  * 2010-06-28: All: Added support for negative line spacing, improved some text rendering corners
  * 2010-06-26: All: Added Window#needs_cursor?/Window::needsCursor() to be able to show the cursor when in editor situations

=0.7.22=
  * 2010-06-17: All: Fixed CJK support throughout Gosu
  * 2010-06-17: All: Transforms are now applied in reverse order (the one that makes sense)

=0.7.21=
  * 2010-05-13: Ruby: Updated CptnRuby to use translate() for scrolling
  * 2010-05-13: All: In light of transformations, Font#drawRot is deprecated now
  * 2010-05-13: C++: Fixed alpha support in Gosu::saveToPNG
  * 2010-05-13: All: Added Image.getData().toBitmap() (C++)/Image#to_blob (Ruby)
  * 2010-05-13: All: Added support for custom entities as registerEntity(name, bitmap) (C++)/register_entity(name, image) (Ruby) that can be placed in text as &name;
  * 2010-05-13: All: Added HTML-like text markup for Font and Image#from_text (and C++ equivalents): `<b>`, `<u>`, `<i>` and `<c=aarrggbb>/<c=rrggbb>`
  * 2010-05-10: All: Added four matrix transformations that affect all contained drawing: scale(), translate(), rotate() and a free-form transform()
  * 2010-05-31: Linux: made gem Rubinius-compatible

=0.7.20=
  * 2010-05-30: Windows: Removed Ruby package (use the rubygem)
  * 2010-05-30: Linux: Removed Ruby support from autotools/source package (use the rubygem)
  * 2010-05-30: All: Added setCaretPos/setSelectionStart (C++) and caret_pos=/selection_start= (Ruby) to TextInput
  * 2010-05-30: Linux: Added fallback to SDL_TFF when loading local .ttf files, please install libSDL-ttf2.0-dev to continue using Gosu, thanks to the_om3ga
  * 2010-05-29: Windows: When requesting a windowed resolution larger than the desktop, Gosu will transparently scale the window down
  * 2010-05-23: C++: Added operator< for Gosu::Button so they can be put into a std::map
  * 2010-05-21: Mac: Gosu wrapper .app now contains full, three-way universal Ruby 1.9 (only tcltk etc. missing)
  * 2010-05-09: Linux: Converted Ruby gem to use mkmf instead of autotools (fixes rvm problems)
  * 2010-05-07: Ruby: Added Window#fullscreen?

=0.7.19=
  * 2010-04-24: Mac: Fixed custom TTF loading on 64-bit OS X 10.6 (thanks Tri&Alex for trying it out); see GettingStartedOnOsx for necessary Xcode project setup instructions
  * 2010-04-23: All: Renamed the semi-documented gosuToRadianScale to degreesToRadian and vice versa (in Ruby, instance methods of Numeric). gosuToRadians and radiansToGosu remain unchanged.
  * 2010-03-29: All: Added amMultiply/:multiply as alpha mode (thanks to mathias for the contribution)
  * 2010-03-28: C++: Sockets should work on 64-bit systems now
  * 2010-03-13: Ruby: Added Gosu::enable_undocumented_retrofication. It globally disables all texture bilinear filtering. Will be removed when proper interface is available, please put this in a "try" block when using.

=0.7.17=
  * 2010-01-03: Mac/Ruby: Added stringio.bundle to the list of built-in extensions in RubyGosu App.app
  * 2010-01-01: All: Reverted Gosu::Sample and Gosu::Song to retain their first argument for now
  * 2010-01-01: Ruby: Fixed support for Ruby 1.9
  * 2010-01-01: Ruby: Gosu::milliseconds always returns a Fixnum now

=0.7.16=
  * 2009-12-29: All: Added Gosu::TextInput#filter for customizing what can/will be entered
  * 2009-12-27: Windows: Added an error message when running a windowed game on a too small desktop
  * 2009-12-27: All: Removed Gosu::Audio/Gosu::Window arguments from Gosu::Sample and Gosu::Song constructors
  * 2009-12-19: All: Added Gosu::Color::RED etc., for C++ and Ruby, deprecated Colors::red in C++
  * 2009-12-07: Ruby: Added Gosu::MAX_TEXTURE_SIZE for banisterfiend ;)
  * 2009-12-07: Ruby: Added support for socket and yaml (=syck.bundle) in RubyGosu App.app
  * 2009-10-09: Ruby: Added enough experimental MacRuby support to run Tutorial.rb (you will need to build Gosu from source)

=0.7.15=
  * 2009-09-13: Ruby: Added compatibility with 64-bit x86 Ruby on OS X (= Snow Leopard)
  * 2009-09-08: Ruby: Fixed Gosu::Color#dup

=0.7.14=
  * 2009-06-28: Mac: OpenAL officially replaces FMOD in Gosu's OS X port.
  * 2009-06-28: Ruby: Added Gosu::VERSION constants
  * 2009-06-28: Linux: Removed FMOD support altogether
  * 2009-06-28: C++: Added GOSU_VERSION macros in Gosu/Version.hpp
  * 2009-06-07: All: Fixed max texture size calculation
  * 2009-05-17: Linux: Improved compatibility with Ruby 1.9

=0.7.13.3=
  * 2009-05-15: Ruby: Published the experimental Ruby 1.9 .app wrapper, feedback very welcome!
  * 2009-05-14: C++: Added name() and flags() getters to Gosu::Font, and a flags argument to its constructor.

=0.7.13.2 (experimental minor release; Ruby gems only)=
  * 2009-05-11: All: Added flags, height, name accessors to Font
  * 2009-05-06: Linux: Fixed issue where thrown exceptions could result in a SIGSEGV on Linux
  * 2009-05-06: Ruby: Worked around incompatibility between Ruby's GC and SWIG's object tracking
  * 2009-05-04: Ruby: Added support for Ruby 1.9 for Windows and Linux
  * 2009-05-04: Ruby: Rebuilt RubyGosu wrapper with SWIG 1.3.3.9
  * 2009-04-29: Added support for newlines to simple version of createText/Image#from_text
  * 2009-04-20: Fixed two bugs with texture borders

=0.7.13=
  * 2009-04-17: All: Implemented global screen width/screen height getter functions
  * 2009-04-16: Ruby: button_id_to_char and char_to_button_id are also available as class methods of Window now (old version is inofficially deprecated now).
  * 2009-04-15: Win: Spinning the mouse wheel generates buttonUp events right after the buttonDown events for symmetry (fix)
  * 2009-04-15: Win: Gosu automatically uses the first icon in the game's executable (if present) as the window icon, thanks for the suggestion Tuiq!
  * 2009-04-16: Win: No button_down events for clicking on the task bar button anymore, thanks AmIMeYet!
  * 2009-04-08: All: Introduced Window#needs_redraw? for game-specific optimizations
  * 2009-04-08: All: Accept both OpenGL and previous vertex order for draw_quad/Image#draw_as_quad
  * 2009-04-01: All: Reinstalled Image allocation optimization
  * 2009-04-01: All: Fixed PNG writing (alpha channel)
  * 2009-03-26: All: Fixed loading top-down BMP files (seem to be rare? :) )
  * 2009-03-09: All: Made Gosu::createText/Image.from_text more compatible with Chinese and Japanese scripts (wrt line breaks)
  * 2009-03-08: All: Reintroduced optimization that square, power-of-two, hard-bordered images are always allocated on a texture of their own
  * 2009-02-10: Ruby: Upgraded to SWIG 1.3.37 (better error messages, probably some fixes in corner cases)
  * 2009-02-10: All: Added Window::updateInterval() / Window#updateInterval

=0.7.12=
  * 2009-02-07: All: Added Window::setMousePosition/set_mouse_position/mouse_x=/mouse_y=
  * 2009-02-07: Win: Improved timing code
  * 2009-01-31: All: Added Song and Sample looping
  * 2009-01-31: All: Added Song#pause, #paused? and SampleInstance#pause, paused?, resume
  * 2009-01-31: C++: Added Gosu::zImmediate (bypasses Z ordering)
  * 2009-01-27: Win: Automatically link against Windows' socket libraries
  * 2009-01-01, All: Gosu::angle_diff() fixed
  * 2009-01-01, Mac: Window::close/Window#close now closes the Window immediately, not after the next event happens (thanks BackupBrian!)

=0.7.11=
  * Ruby: `char_to_button_id` and `button_id_to_char` return nil for value that couldn't be converted (instead of 0).
  * All: `Input::down(button)` silently returns false for a "no button" id, `Window#button_down?` silently returns false for `nil` values.
  * All: Added simpler createText()/Image#from_text with support for just one line.
  * All: Added kbA - kbZ constants that map to the physical A-Z keys (i.e. should not be affected by localized keyboards).
  * Mac: Added some more spacing between Font characters.
  * Linux: Disabled key repeat. (Really!)
  * Linux: Fixed timing bug on very fast machines.
  * Linux: Fixed crashes with regards to non-ASCII keys and Button<>char conversion.
  * (All: Added experimental bi-directional text support in Gosu::Font, based on the LTR Override and RTL Override code points. You will need to manually insert them for now, implicit LTR/RTL text will not be recognized.)

=0.7.10.1 / 0.7.10.2 / 0.7.10.3=
  * Linux: Fixed bug with -fPIC causing compilation trouble AGAIN (thanks 0x17!)
  * Linux: Fixed bug with installing Gosu for Ruby 1.9 when 1.8 is also present
  * All: Quite some fixes regarding the new release system…

=0.7.10=
  * All: Added Song::volume()/Song#volume (thanks rabbitblue!)
  * All: Fixed Gosu::angleDiff
  * All: Fixed loading of PNG files with transparent palette entries.
  * All: Added clipping via Window::beginClipping/endClipping or Window#clip_to, respectively
  * All: Added Font::drawRot()/Font#draw_rot
  * All: Increased the max OpenGL texture size used for a single image to 1024x1024 (only important if you rely on Image#tex_info)
  * Ruby: Added `Numeric#gosu_to_radians` and `Numeric#radians_to_gosu` for easy angle conversion.
  * C++: Renamed boundBy() to clamp()
  * Linux: Fixed panning of SDL-based sound system, also added support for graceful degradation if no sound device available (thanks oli...! ;))
  * Linux: Windowed mode fixed on Compiz, fullscreen mode fixed everywhere.
  * Linux: Mouse wheel should work now.
  * Linux: Now available as a Ruby gem! (Thanks to Leonardo Boiko for the contribution)
  * Windows, Linux: Fixed an unlikely lockup.

=0.7.9=
  * All: Added Gosu::TextInput functionality with example for Ruby and C++
  * All: OpenGL allocates depth buffer, allows for better custom OpenGL effects.
  * All: Gosu::Font looks a lot smoother
  * All: Disabled undocumented Async functionality until further testing has happened
  * FreeBSD: Linux port extended to cover FreeBSD as well (thanks Vagabond!)
  * Mac: Fixed a bug where fullscreen mode could rearrange desktop icons (and otherwise confuse OS X).
  * Mac: Added mouse wheel support.
  * Mac: char_to_id bugfix (thanks 0x17!)
  * Mac: Mouse will not be hidden as aggressively
  * Mac: Don't keep firing buttonDown events when holding keys down
  * Windows: Fullscreen mode allows alt+tab switching.
  * Windows: Fixed mouse wheel support.

=0.7.8.5=
  * All: Much better HSV interface. Hope this doesn't already break any code.
  * All: Audio interface VASTLY extended! Yay.
  * Linux: SDL_mixer port much closer to FMOD one.
  * Mac: Fixed right-click detection

=0.7.8=
  * Mac, Windows: Font substitution works, i.e. chars outside of the selected font can be used (こんにちは日本！)
  * Mac, Windows: Custom font loading—just use a TTF filename as a font name (must contain '/')
  * Mac: Fixed Window#button_id_to_char
  * Mac: Window now pops up in the front when run from the Terminal
  * Windows: Fixed fullscreen mode
  * Linux: Removed optimization that prevented 64bit compilation
  * Linux: Fixed compilation error (boost::none.hpp was missing, thanks to Ryan Baxter)
  * Ruby: Another cool Chipmunk/RMagick demo by Robert Sheehan
  * Ruby: HSV color support as in C++

=0.7.7=
  * All: Gosu now uses doubles as Z positions
  * All: Gosu allows for custom OpenGL integration, (Ruby) example game included
  * Mac, Linux: Additive drawing fixed
  * Mac: Leopard compatibility
  * Mac: Vsync finally enabled—was *so* more necessary @ 60 Hz
  * Windows: Gosu now uses OpenGL instead of Direct3D (less code to maintain, more game portability)
  * Windows: Vsync also enabled (didn't work on Intel chipset though...)
  * Ruby: Gosu::sleep was not supposed to exist, now killed (did overwrite Ruby's sleep when include'ing Gosu)
  * Ruby: Gosu now cooperates with Ruby's multitasking
  * Ruby: Chipmunk integration example

=0.7.6=
  * All: Fixed a bug potentially cutting off text on all platforms
  * All: Fixed a bug which would exclude lines from very long text
  * All: updateInterval is now a float, not an integer. On systems other than OS X, it is effectively rounded upwards, though. The new default value is 16.666666 (= 60 FPS).
  * Ruby: RMagick Images can be passed instead of filenames + example game
  * Ruby: Image#draw_as_quad

=0.7.5=
  * All: functions for button id<>character conversion are static now. Code shouldn't break.
  * Ruby: Fixed name clash in CptnRuby.rb
  * Ruby: Fixed memory leaks in load_tiles and from_text (thanks to Galin Yordanov!)
  * Linux: Some changes for UTF-8 support (thanks to Galin Yordanov again)
  * Linux: Hid mouse cursor over X11 window (thanks to acetoxy)
  * Mac: Changed userSettingsPrefix to be ~/Library/Preferences
  * Mac: Some changes for Ruby UTF-8 support
  * Windows: Strings in Ruby programs now must be UTF-8 encoded
  * Windows: FMOD.dll ships with Gosu now (RubyGosu adjusted to find it magically)

=0.7.4=
  * Mac: Hats work more reliably than in 0.7.3 (and SDL :P)
  * Ruby: Ooops - exceptions don't halt everything anymore.

=0.7.3=
  * Mac: Gamepad support at last!
  * Ruby: New example game/exercise collection ‘Cptn. Ruby’
  * All: Added README.txt file to tell people to read the wiki.

=0.7.2=
  * Mac/Ruby: The cumbersome .app wrapper is now only used for deployment; for development, running Gosu applications from the Terminal is now possible.
  * Ruby: Re-added missing mouse_x/mouse_y/width/height accessor functions in Window. Thanks mutwin.kraus! ;)
  * Ruby: Removed the annoying "type" argument for Song#initialize. *Breaks code*, even if this is not a milestone release ;(
  * C++: Added (simplified!) constructors that take filenames to classes Image, Sample and Song; also loadImagesFromTiledBitmap accepts a filename. See reference.
  * C++: Changed back Button:isDown to be Input::down(Button). There was kind of a mess going on, esp. because the tutorials were outdated.
  * Win/Ruby: Tutorial media files were missing, sorry!

=0.7.1=
  * Win: Moved to SWIG too.
  * Mac: Fixed build script.
  * Linux: Added SDL_mixer fallback. Yay, thanks nornagon!

=0.7.0=
  * Moved to Google Code!
  * Mac: implemented idToChar/charToId
  * Mac: implemented fullscreen
  * C++: Input uses Gosu::Button instead of unsigned for identification. *Breaks code.*
  * Ruby: clearer Mac game distribution scheme
  * Ruby: moved to SWIG
  * Ruby: MUCH improved exception handling
  * Ruby: Some arguments swapped to become consistent with C++'s order. *Breaks code.*

=0.6.5=
  * Linux, Mac: Fixed File.

=0.6.4=
  * Linux: Made texture binding lazier; this seriously speeds up Gosu on some 3D drivers.
  * Linux: Made checking for fmod more tolerant.
  * Mac: simplified keyboard code; if this breaks something please inform us!
  * Mac: Universal at last!
  * Mac: updated to .xcodeproj files
  * Win: Updated to more recent library versions.

=0.6.3=
  * Mac: added mouse clicking and hiding

=0.6.2=
  * Mac: Now even fixed Gosu/Input for C++!
  * Win: Another Input bug fixed.

=0.6.1=
  * All: Fixed the stuff that the 0.6.0 update broke
  * Linux, Mac: Improved installation routine

=0.6.0=
  * All: Added Mac support
  * Ruby: Added draw_line and draw_triangle

=0.5.1=
  * All: Added Gosu::File and made it the prefererred option over loadFile/saveFile

=0.5.0=
  * All: Fixed Song::playing
  * All: Replaced Gosu::Streams by new Gosu::IO system
  * Win: Fixed Gosu::argument() splitting
  * Win: Fixed Gosu::argument() range checking

=0.4.3=
  * All: globally replaced Bitmap::replace() by applyColorKey() for color keying
  * All: added Win::appFilename and Win::appDirectory
  * All: added Gosu/Compression.hpp

=0.4.2=
  * All: fixed some bugs in Song
  * All: multiple instances of Audio prohibited
  * All: added distance()
  * All: added numpad keyboard IDs
  * Unix: Compile OpenAL if fmod isn't found

=0.4.1=
  * Ruby: Some documentation improvements
  * Ruby: Linux bug fixes
  * Ruby: draw_quad fixed

=0.4.0=
  * All: merged documentation and website into one
  * All: tutorial greatly improved
  * Ruby: tutorial now supports Ruby
  * Ruby: reference improved

=0.3.2=
  * MSVC: fixed linker errors (remains of MSVC6 compatibility)
  * GCC: improved config script
  * Ruby: added Linux support
  * Ruby: improved exception stability

=0.3.1=
  * MSVC: removed non-working MSVC6 compatibility (hopeless)

=0.3.0=
(initial release)
 
 
 
 